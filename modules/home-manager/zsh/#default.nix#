{ config, osConfig, pkgs, ... }:

let
  extraZshConfig = ''
PS1='%F{green}%n%f@%F{magenta}%m%f:%F{blue}%~%f > '

set -o vi

gpg-connect-agent /bye
export SSH_AUTH_SOCK=$(gpgconf --list-dirs agent-ssh-socket)

function vterm_printf(){
    printf "\e]%s\e\\" "$1"
}
if [[ "$INSIDE_EMACS" = 'vterm' ]]; then
    alias clear='vterm_printf "51;Evterm-clear-scrollback";tput clear'
fi
vterm_cmd() {
    local vterm_elisp
    vterm_elisp=""
    while [ $# -gt 0 ]; do
        vterm_elisp="$vterm_elisp""$(printf '"%s" ' "$(printf "%s" "$1" | sed -e 's|\\|\\\\|g' -e 's|"|\\"|g')")"
        shift
    done
    vterm_printf "51;E$vterm_elisp"
}
autoload -U add-zsh-hook
add-zsh-hook -Uz chpwd (){ print -Pn "\e]2;%m:%2~\a" }
vterm_prompt_end() {
    vterm_printf "51;A$(whoami)@$(hostname):$(pwd)"
}
setopt PROMPT_SUBST
PROMPT=$PROMPT'%{$(vterm_prompt_end)%}'

eval "$(direnv hook zsh)"
  '';
in
{

  programs = {

    zsh = {
      enable = true;
      autosuggestion.enable = true;
      enableCompletion = true;
      enableVteIntegration = true;
        history = {
        size = 10000;
        ignoreAllDups = true;
      };
      shellAliases = {
        ls = "ls -1 --group-directories-first --color=auto"; 
        la = "ls -1A --group-directories-first --color=auto"; 
        grep = "grep --color=auto";
        mv = "mv -v";
        cp = "cp -v";
        rm = "rm -v";
        rmdir = "rmdir -v";
        mkdir = "mkdir -v";
        neofetch = "echo && ${pkgs.neofetch}/bin/neofetch";
        sysrebuild = "sudo nixos-rebuild switch --flake ${osConfig.configDir}/#${osConfig.hostname}";
      };
      syntaxHighlighting.enable = true;
      initExtra = extraZshConfig;
    };

    direnv = {
      enable = true;
      enableZshIntegration = true;
      nix-direnv.enable = true;
    };

  };

}
